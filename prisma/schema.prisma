generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  clerkId       String @unique
  email         String @unique
  firstname     String? @unique
  lastname      String? @unique
  createdAt     Datetime @default(now())
  subscription  Subscription?
  integrations  Integrations[]
  automations   Automation[]
}

model Subscription{
  id          String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User        User? @relation(fields:[userId], references:[id], onDelete:Cascade)
  userId      String? @db.Uuid
  createdAt   Datetime @default(now())
  plan        SUBSCRIPTION_PLAN @default(FREE)
  updatedAt   Datetime @default(now())
  customerId  String? @unique
}

model Integrations{
  id          String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        INTEGRATIONS @default(INSTAGRAM)
  createdAt   Datetime @default(now())
  User        User? @relation(fields:[userId], references:[id], onDelete:Cascade)
  userId      String? @db.Uuid
  token       String @unique
  expiresAt   Datetime?
  instagramId String? @unique
}


model Automation{
  id        String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String @default("Untitled")
  createdAt Datetime @default(now())
  active    Boolean @default(false) 
  User      User? @relation(fields:[userId], references:[id], onDelete:Cascade)
  userId    String? @db.Uuid
}